# this is the build file for project 
# it is autogenerated by the xmake build system.
# do not edit by hand.

# project
cmake_minimum_required(VERSION 3.15.0)
cmake_policy(SET CMP0091 NEW)
project(Delegate LANGUAGES CXX)

# target
set(CMAKE_C_COMPILER "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.40.33807/bin/HostX64/x64/cl.exe")
set(CMAKE_CXX_COMPILER "C:/Program Files/Microsoft Visual Studio/2022/Community/VC/Tools/MSVC/14.40.33807/bin/HostX64/x64/cl.exe")
add_executable(Delegate "")
set_target_properties(Delegate PROPERTIES OUTPUT_NAME "Delegate")
set_target_properties(Delegate PROPERTIES RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/build/windows/x64/debug")
target_compile_options(Delegate PRIVATE
    $<$<COMPILE_LANGUAGE:CXX>:/Zc:__cplusplus>
)
if(MSVC)
    target_compile_options(Delegate PRIVATE /EHsc)
elseif(Clang)
    target_compile_options(Delegate PRIVATE -fexceptions)
    target_compile_options(Delegate PRIVATE -fcxx-exceptions)
elseif(Gcc)
    target_compile_options(Delegate PRIVATE -fexceptions)
endif()
set_target_properties(Delegate PROPERTIES CXX_EXTENSIONS OFF)
target_compile_features(Delegate PRIVATE cxx_std_23)
if(MSVC)
    target_compile_options(Delegate PRIVATE $<$<CONFIG:Debug>:-Od>)
else()
    target_compile_options(Delegate PRIVATE -O0)
endif()
if(MSVC)
    target_compile_options(Delegate PRIVATE -Zi)
else()
    target_compile_options(Delegate PRIVATE -g)
endif()
if(MSVC)
    set_property(TARGET Delegate PROPERTY
        MSVC_RUNTIME_LIBRARY "MultiThreaded$<$<CONFIG:Debug>:Debug>")
endif()
target_sources(Delegate PRIVATE
    src/main.cpp
)

